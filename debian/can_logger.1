.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.4.
.TH CAN_LOGGER 1 "September 2016" "python-can" "User Commands"
.SH NAME
can_logger \- log CAN traffic to the terminal and to a file on disk.
.SH DESCRIPTION
usage: can_logger [\-h] [\-f LOG_FILE] [\-v] [\-c CHANNEL] ...
.PP
Log CAN traffic, printing messages to stdout or to a given file
.SS "optional arguments:"
.TP
\fB\-v\fR
How much information do you want to see at the command
line? You can add several of these e.g., \fB\-vv\fR is DEBUG
.TP
\fB\-c\fR CHANNEL, \fB\-\-channel\fR CHANNEL
Most backend interfaces require some sort of channel.
For example with the serial interface the channel
might be a rfcomm device: "/dev/rfcomm0".
With the socketcan interfaces valid channel examples include: "can0", "vcan0"
.TP
\fB\-f\fR LOG_FILE, \fB\-\-file_name\fR LOG_FILE
Path and base log filename, extension can be .txt,
\&.asc, .csv, .db, .npz
.TP
\fB\-h\fR, \fB\-\-help\fR
list all available options
.SH SEE ALSO
j1939_logger(1),
candump(1), canlogserver(1)
